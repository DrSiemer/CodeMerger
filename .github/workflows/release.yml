name: Create Release

# Run when a new tag is pushed (format v*.*.*)
on:
  push:
    tags:
      - 'v*'

jobs:
  validate-tag:
    name: Validate Release Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify tag is on the master branch
        run: |
          TAG="${{ github.ref_name }}"
          echo "Validating tag: $TAG"
          TAG_COMMIT_HASH=$(git rev-parse "$TAG")
          if ! git branch -r --contains "$TAG_COMMIT_HASH" | grep -q "origin/master"; then
            echo "::error::Tag $TAG points to a commit that is not on the 'master' branch."
            echo ""
            echo "To fix this, delete the incorrect tag and create a new one on a commit in 'master'."
            echo ""
            echo "  git push --delete origin $TAG"
            echo "  git tag -d $TAG"
            echo ""
            exit 1
          fi
          echo "Tag validation successful: $TAG is on the master branch."

  # Build for Windows
  build-windows:
    name: Build for Windows
    needs: validate-tag
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Build with PyInstaller
        run: pyinstaller codemerger.spec
      - name: Compile Inno Setup installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.7
        with:
          path: setup.iss
          options: /dMyAppVersion=${{ github.ref_name }}
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: CodeMerger-windows-build
          path: |
            dist/CodeMerger.exe
            dist-installer/CodeMerger_Setup.exe

  # Create the GitHub Release
  create-release:
    name: Create a new release
    needs: [build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: CodeMerger ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            artifacts/CodeMerger-windows-build/dist-installer/CodeMerger_Setup.exe