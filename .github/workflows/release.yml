name: Create Release

# Run when a new tag is pushed (format v*.*.*)
on:
  push:
    tags:
      - 'v*'

jobs:
  validate-tag:
    name: Validate Release Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify tag is on the master branch
        run: |
          TAG="${{ github.ref_name }}"
          echo "Validating tag: $TAG"

          # Get the commit hash the tag points to
          TAG_COMMIT_HASH=$(git rev-parse "$TAG")

          # Check if that commit is an ancestor of the master branch.
          if ! git branch -r --contains "$TAG_COMMIT_HASH" | grep -q "origin/master"; then
            echo "::error::Tag $TAG points to a commit that is not on the 'master' branch."
            echo "Please tag a commit that has been merged into master."
            exit 1
          fi

          echo "Tag validation successful: $TAG is on the master branch."

  # Build for Windows
  build-windows:
    needs: validate-tag
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller codemerger.spec

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: CodeMerger-windows-exe
          path: dist/CodeMerger.exe

  # Build for macOS
  build-mac:
    needs: validate-tag
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller codemerger.spec

      - name: Compress .app into a .zip file
        run: zip -r dist/CodeMerger-macOS.zip dist/CodeMerger.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: CodeMerger-macOS-zip
          path: dist/CodeMerger-macOS.zip

  # Create the GitHub Release (runs after both build jobs have succeeded)
  create-release:
    needs: [build-windows, build-mac]
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            artifacts/CodeMerger-windows-exe/CodeMerger.exe
            artifacts/CodeMerger-macOS-zip/CodeMerger-macOS.zip